// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wazyApi.Models;

#nullable disable

namespace wazyApi.Models
{
    [DbContext(typeof(wazytools_vendorContext))]
    [Migration("20220930220601_newschemjjje")]
    partial class newschemjjje
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("wazyApi.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("author")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("comments")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("date")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("slug")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("wazyApi.Models.BlogCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("pivotId")
                        .HasColumnType("int");

                    b.Property<string>("slug")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.HasIndex("pivotId");

                    b.ToTable("BlogCategories");
                });

            modelBuilder.Entity("wazyApi.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("pivotId")
                        .HasColumnType("int");

                    b.Property<string>("slug")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("pivotId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("wazyApi.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("pivotId")
                        .HasColumnType("int");

                    b.Property<string>("slug")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("pivotId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("wazyApi.Models.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BlogId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("height")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("pivotId")
                        .HasColumnType("int");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("width")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.HasIndex("ProductId");

                    b.HasIndex("pivotId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("wazyApi.Models.Pivot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BlogCategoryId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductCategoryId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("blog_id")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("brand_id")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("product_id")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("related_id")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("upload_file_id")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Pivots");
                });

            modelBuilder.Entity("wazyApi.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .HasColumnType("longtext");

                    b.Property<int>("AvQty")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Featured")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("HasComment")
                        .HasColumnType("longtext");

                    b.Property<int>("IsNew")
                        .HasColumnType("int");

                    b.Property<int>("IsSale")
                        .HasColumnType("int");

                    b.Property<string>("LongDesc")
                        .HasColumnType("longtext");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("longtext");

                    b.Property<int?>("New")
                        .HasColumnType("int");

                    b.Property<string>("OnlineStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("ProductName")
                        .HasColumnType("longtext");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("RefField")
                        .HasColumnType("longtext");

                    b.Property<int?>("Reviews")
                        .HasColumnType("int");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Sold")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.Property<int?>("Top")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("Until")
                        .HasColumnType("date");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("wazyApi.Models.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("VariantId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("pivotId")
                        .HasColumnType("int");

                    b.Property<string>("slug")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("VariantId");

                    b.HasIndex("pivotId");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("wazyApi.Models.SmPicture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("height")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("pivotId")
                        .HasColumnType("int");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("width")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("pivotId");

                    b.ToTable("SmPictures");
                });

            modelBuilder.Entity("wazyApi.Models.Variant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("color_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("pivotId")
                        .HasColumnType("int");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("pivotId");

                    b.ToTable("Variants");
                });

            modelBuilder.Entity("wazyApi.Models.BlogCategory", b =>
                {
                    b.HasOne("wazyApi.Models.Blog", null)
                        .WithMany("blog_categories")
                        .HasForeignKey("BlogId");

                    b.HasOne("wazyApi.Models.Pivot", "pivot")
                        .WithMany()
                        .HasForeignKey("pivotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pivot");
                });

            modelBuilder.Entity("wazyApi.Models.Brand", b =>
                {
                    b.HasOne("wazyApi.Models.Product", null)
                        .WithMany("brands")
                        .HasForeignKey("ProductId");

                    b.HasOne("wazyApi.Models.Pivot", "pivot")
                        .WithMany()
                        .HasForeignKey("pivotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pivot");
                });

            modelBuilder.Entity("wazyApi.Models.Category", b =>
                {
                    b.HasOne("wazyApi.Models.Product", null)
                        .WithMany("category")
                        .HasForeignKey("ProductId");

                    b.HasOne("wazyApi.Models.Pivot", "pivot")
                        .WithMany()
                        .HasForeignKey("pivotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pivot");
                });

            modelBuilder.Entity("wazyApi.Models.Picture", b =>
                {
                    b.HasOne("wazyApi.Models.Blog", null)
                        .WithMany("image")
                        .HasForeignKey("BlogId");

                    b.HasOne("wazyApi.Models.Product", null)
                        .WithMany("pictures")
                        .HasForeignKey("ProductId");

                    b.HasOne("wazyApi.Models.Pivot", "pivot")
                        .WithMany()
                        .HasForeignKey("pivotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pivot");
                });

            modelBuilder.Entity("wazyApi.Models.Size", b =>
                {
                    b.HasOne("wazyApi.Models.Variant", null)
                        .WithMany("size")
                        .HasForeignKey("VariantId");

                    b.HasOne("wazyApi.Models.Pivot", "pivot")
                        .WithMany()
                        .HasForeignKey("pivotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pivot");
                });

            modelBuilder.Entity("wazyApi.Models.SmPicture", b =>
                {
                    b.HasOne("wazyApi.Models.Product", null)
                        .WithMany("sm_pictures")
                        .HasForeignKey("ProductId");

                    b.HasOne("wazyApi.Models.Pivot", "pivot")
                        .WithMany()
                        .HasForeignKey("pivotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pivot");
                });

            modelBuilder.Entity("wazyApi.Models.Variant", b =>
                {
                    b.HasOne("wazyApi.Models.Product", null)
                        .WithMany("variants")
                        .HasForeignKey("ProductId");

                    b.HasOne("wazyApi.Models.Pivot", "pivot")
                        .WithMany()
                        .HasForeignKey("pivotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pivot");
                });

            modelBuilder.Entity("wazyApi.Models.Blog", b =>
                {
                    b.Navigation("blog_categories");

                    b.Navigation("image");
                });

            modelBuilder.Entity("wazyApi.Models.Product", b =>
                {
                    b.Navigation("brands");

                    b.Navigation("category");

                    b.Navigation("pictures");

                    b.Navigation("sm_pictures");

                    b.Navigation("variants");
                });

            modelBuilder.Entity("wazyApi.Models.Variant", b =>
                {
                    b.Navigation("size");
                });
#pragma warning restore 612, 618
        }
    }
}
